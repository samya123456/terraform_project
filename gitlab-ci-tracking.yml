stages:
   - dependencies
   - build
   - deploy
  

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || ($CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "develop" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging")
      variables:
        IMAGE_ENVIRONMENT: qa
        RXPLATFORM_ENVIRONMENT: qa
        CLUSTER_LOCATION: us-central1
        CURRENT_BRANCH: develop
    - if: $CI_COMMIT_BRANCH == "staging" || ($CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "staging" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production")
      variables:
        IMAGE_ENVIRONMENT: staging
        RXPLATFORM_ENVIRONMENT: staging
        CLUSTER_LOCATION: us-central1
        CURRENT_BRANCH: staging
    - if: $CI_COMMIT_TAG
      variables:
        IMAGE_ENVIRONMENT: production
        RXPLATFORM_ENVIRONMENT: production
        CLUSTER_LOCATION: us-central1
        CURRENT_BRANCH: production
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "develop" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "staging" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME != "production" && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "production")
      variables:
        IMAGE_ENVIRONMENT: dynamic/$CI_COMMIT_REF_SLUG
        RXPLATFORM_ENVIRONMENT: dynamic
        CLUSTER_LOCATION: us-central1
        CURRENT_BRANCH: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
        USE_PULL_REQUEST_ENVIRONMENT: "true"
    - if: $CI_MERGE_REQUEST_IID && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "develop" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "staging" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "production"
      variables:
        IS_DUMMY_PULL_REQUEST: "true"
    - if: $CI_COMMIT_BRANCH == "production"
      variables:
        SYNC_SOURCE_BRANCH: production

variables:

  COMPOSER_AUTH: $COMPOSER_AUTH
  IMAGES_PREFIX: gcr.io/$PROJECT_ID/rxplatform/tracking-service-web
  HELPER_IMAGES_PREFIX: $IMAGES_PREFIX/helpers
  FULL_IMAGES_PREFIX: $IMAGES_PREFIX/$IMAGE_ENVIRONMENT
  TESTER_IMAGE_NAME: $HELPER_IMAGES_PREFIX/tester
  MYSQL_IMAGE_NAME: $HELPER_IMAGES_PREFIX/mysql
  MONGO_IMAGE_NAME: $HELPER_IMAGES_PREFIX/mongo
  REVIEW_ENVIRONMENT_IMAGE_NAME: $HELPER_IMAGES_PREFIX/review-environment
  WEB_IMAGE_NAME: $IMAGES_PREFIX/$RXPLATFORM_ENVIRONMENT/tracking-service-web
  CLUSTER_NAME: $RXPLATFORM_ENVIRONMENT-cluster

.dependencies:
  stage: dependencies

  needs: []

  rules:
    - when: never

  image: google/cloud-sdk

  script:
    - cp $DEPENDENCY_DOCKERFILE Dockerfile
    - gcloud builds submit --config cloudbuild-generic.yaml --substitutions "_IMAGE_NAME=$DEPENDENCY_IMAGE,COMMIT_SHA=$CI_COMMIT_SHA" --gcs-log-dir=gs://rxmg-infrastructure_cloudbuild/source

  allow_failure: true

dependencies:mysql:
  extends: .dependencies

  rules:
    - when: manual

  variables:
    DEPENDENCY_DOCKERFILE: deploy/helpers/mysql/Dockerfile-mysql
    DEPENDENCY_IMAGE: $MYSQL_IMAGE_NAME

  before_script:
    - cp deploy/helpers/mysql/mysql-init.sql mysql-init.sql

dependencies:review_environment:
  extends: .dependencies

  rules:
    - when: manual

  variables:
    DEPENDENCY_DOCKERFILE: deploy/helpers/review-environment/Dockerfile-review-environment
    DEPENDENCY_IMAGE: $REVIEW_ENVIRONMENT_IMAGE_NAME

build:web:
  stage: build
  
  needs: []

  image: google/cloud-sdk
  allow_failure: true

  script:
    - cp docker/production/Dockerfile Dockerfile
    - env_temp=ENV_VALUE_$IMAGE_ENVIRONMENT
    - cat ${!env_temp}
    - cat ${!env_temp} > docker/production/.env
    - cat docker/production/.env
    - curl -v https://icanhazip.com
    - gcloud builds submit --config cloudbuild.yaml --substitutions "_IMAGE_NAME=$WEB_IMAGE_NAME,COMMIT_SHA=$CI_COMMIT_SHA,_COMPOSER_AUTH=$COMPOSER_AUTH" --gcs-log-dir=gs://rxmg-infrastructure_cloudbuild/source

review_environment:deploy:
  stage: deploy

  needs: ["build:web"]
  image: $REVIEW_ENVIRONMENT_IMAGE_NAME
  

  resource_group: $RXPLATFORM_ENVIRONMENT/web

  environment:
    name: $RXPLATFORM_ENVIRONMENT/web

  script:
    - echo "Deploying..."
  
  after_script:
     - export USE_GKE_GCLOUD_AUTH_PLUGIN=True
     - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B53DC80D13EDEF05 AA16FCBCA621E701
     - apt-get remove -y google-cloud-cli-gke-gcloud-auth-plugin
     - apt-get clean
     - apt-get update && apt-get install -y apt-utils google-cloud-sdk-gke-gcloud-auth-plugin gettext-base
     - gcloud container clusters get-credentials "$CLUSTER_NAME" --zone "$CLUSTER_LOCATION" --project "$PROJECT_ID"
     - kubectl get namespace | grep -q "^$RXPLATFORM_ENVIRONMENT " || kubectl create namespace $RXPLATFORM_ENVIRONMENT
     - export APP_NAME=tracking-service-web
     - export REPLICA_COUNT=2
     - export IMAGE_URL=$WEB_IMAGE_NAME:$CI_COMMIT_SHA
     - export PORT=8080
     - envsubst < deployment.yaml | kubectl apply -f - --namespace=$RXPLATFORM_ENVIRONMENT